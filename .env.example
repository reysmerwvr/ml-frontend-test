###########################################################
################## Application Setup ######################
###########################################################
REACT_APP_ENV=development
REACT_APP_API_BASE_URL=https://your-api.ml.com
REACT_APP_API_CONTENT_TYPE_HEADER=application/json
REACT_APP_API_ACCEPT_HEADER=application/json
REACT_APP_API_RESULT_LIMIT=4
REACT_APP_LOCALE=en-US
REACT_APP_CURRENCY=$

###########################################################
###################### General Setup ######################
###########################################################

### Paths #################################################
# Point to the path of your applications code on your host
APP_CODE_PATH_HOST=.

# Point to where the `APP_CODE_PATH_HOST` should be in the container
APP_CODE_PATH_CONTAINER=/app

# You may add flags to the path `:cached`, `:delegated`. When using Docker Sync add `:nocopy`
APP_CODE_CONTAINER_FLAG=:cached

# Choose storage path on your machine. For all storage systems
DATA_PATH_HOST=~/.your-app-name/data

### Drivers ################################################

# All volumes driver
VOLUMES_DRIVER=local

# All Networks driver
NETWORKS_DRIVER=bridge

### Docker compose files ##################################

# Select which docker-compose files to include. If using docker-sync append `:docker-compose.sync.yml` at the end
COMPOSE_FILE=docker-compose.yml

# Change the separator from : to ; on Windows
COMPOSE_PATH_SEPARATOR=:

# Define the prefix of container names. This is useful if you have multiple projects that use node-challenge to have seperate containers per project.
COMPOSE_PROJECT_NAME=your-app-name

###########################################################
################ Containers Customization #################
###########################################################

DOCKER_FILE=Dockerfile.dev
